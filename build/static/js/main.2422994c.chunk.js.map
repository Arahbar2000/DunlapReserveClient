{"version":3,"sources":["Components/Loading.js","helpers/userHelpers.js","Context/AuthContext.js","Components/Error.js","Components/Navbar.js","helpers/bookHelper.js","Context/UserContext.js","helpers/timeHelper.js","Components/AddPlayer.js","Components/AuthenticatedScheduler.js","Components/AuthenticatedApp.js","Components/UnauthenticatedScheduler.js","Components/UnauthenticatedApp.js","Components/App.js","serviceWorker.js","index.js"],"names":["Loading","signup","access_token","console","log","process","Promise","resolve","reject","localStorage","getItem","axios","url","REACT_APP_API_URL","method","headers","data","catch","error","response","AuthContext","createContext","AuthProvider","props","useState","auth","token","user","setData","useGoogleLogin","clientId","onSuccess","wc","then","onFailure","isSignedIn","signIn","loaded","signOut","useGoogleLogout","onLogoutSuccess","Provider","value","useAuth","useContext","Error","React","Component","Navbar","signUp","a","signin","signout","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","key","bookCourt","res","unbookCourt","UserContext","UserProvider","loading","userData","setUserData","updateUser","dateToInterval","date","roundedDate","newDate","Date","getMinutes","setHours","getHours","setTime","getTime","roundTime","intervalArray","start","end","intervals","Array","i","length","AddPlayer","booked","unbook","selected","book","cancel","AuthenticatedScheduler","calendar","createRef","setSelected","selection","setSelection","resources","push","title","handleSelect","resource","court","startInterval","endInterval","getDate","current","getApi","refetchEvents","async","unselect","ref","plugins","resourceTimeGridPlugin","interactionPlugin","initialView","events","editable","eventOverlap","selectable","select","allDaySlot","slotMinTime","slotMaxTime","eventDidMount","info","event","themeSystem","timeZone","AuthenticatedApp","exact","path","component","isAuthenticated","UnauthenticatedScheduler","UnauthenticatedApp","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2422994c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Loading = () => {\n    return <h1>LOADING</h1>\n}\n\nexport default Loading","import axios from 'axios'\nimport { access } from 'fs'\nconst {REACT_APP_API_URL} = process.env\nexport const signup = access_token => {\n    console.log(access_token)\n    console.log(REACT_APP_API_URL)\n    return new Promise((resolve, reject) => {\n        console.log(localStorage.getItem('token'))\n        axios({\n            url: REACT_APP_API_URL + '/signup',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json'  },\n            data: { access_token }\n        }).catch(error => {\n            console.log(error.response)\n            return reject(error)\n        })\n        return resolve()\n    })\n}\n\nexport const getUserProfile = access_token => {\n    return new Promise((resolve, reject) => {\n        axios({\n            url: REACT_APP_API_URL +'/userProfile',\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            data: { access_token }\n        }).then(res => {\n            return resolve(res.data.user)\n        }).catch(error => {\n            return reject(error)\n        })\n    })\n}","import React, {useState, createContext, useReducer, useContext} from 'react'\nimport Loading from '../Components/Loading'\nimport { signup } from '../helpers/userHelpers'\nimport { useGoogleLogin, useGoogleLogout } from 'react-google-login'\nconst { REACT_APP_GOOGLE_CLIENT_ID } = process.env\nconst AuthContext = createContext()\n\nconst AuthProvider = props => {\n    const [data, setData] = useState({auth: false, token: null, user: null})\n\n    const handleLoginSuccess = data => {\n        signup(data.wc.access_token)\n        .then(user => setData({ ...data, auth: true, token: data.wc.access_token, user }))\n    }\n\n    const handleLogoutSuccess = () => {\n        setData({ ...data, auth: false, token: null, user: null })\n    }\n\n    const handleLogoutFailure = () => {\n        setData({ ...data, auth: false, token: null, user: null })\n    }\n\n\n    const { signIn, loaded } = useGoogleLogin({\n        clientId: REACT_APP_GOOGLE_CLIENT_ID,\n        onSuccess: handleLoginSuccess,\n        onFailure: () => setData({ ...data, auth: false, token: null, user: null }),\n        isSignedIn: true\n    })\n\n    const { signOut } = useGoogleLogout({\n        clientId: REACT_APP_GOOGLE_CLIENT_ID,\n        onLogoutSuccess: handleLogoutSuccess,\n        onFailure: handleLogoutFailure\n    })\n\n    if(!loaded) {\n        return <Loading />\n    }\n\n    return <AuthContext.Provider value={{data, signIn, signOut}} {...props} />\n}\n\nconst useAuth = () => useContext(AuthContext)\nexport { AuthProvider, useAuth }\n\n\n","import React from 'react'\n\nclass Error extends React.Component {\n    render() {\n        return (\n            <h2>404: Not Found</h2>\n        )\n    }\n}\n\nexport default Error","import React, { useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport './Navbar.css'\nimport { useAuth0 } from \"@auth0/auth0-react\"\nimport {signup} from '../helpers/userHelpers'\nimport axios from 'axios'\nimport { userInfo } from 'os'\n\nconst Navbar = (props) => {\n    const signUp = async () => {\n        await props.signin()\n        signup()\n    }\n\n    const login = async () => {\n        await props.signin()\n    }\n\n    const signOut = async () => {\n        await props.signout()\n    }\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <Link className='navbar-brand' to='/'>Home</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navigationbar\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navigationbar\">\n                <ul className=\"nav navbar-nav ml-auto\">\n                    {!props.auth ? \n                    [<li className=\"nav-item\" key=\"login\">\n                    <Link className='nav-link' to='' onClick={signUp} >Login</Link>\n                    </li>,\n                    <li className=\"nav-item\" key=\"signup\">\n                        <Link className='nav-link' to='' onClick={signUp}>Sign Up</Link>\n                    </li>] : \n                    <li className=\"nav-item\">\n                        <Link to='' className='nav-link' onClick={signOut}>Logout</Link>\n                    </li>}\n                </ul>\n            </div>\n      </nav>\n    )\n}\n\nexport default Navbar","import axios from 'axios'\nconst {REACT_APP_API_URL} = process.env\n\nexport const bookCourt = (data) => {\n    console.log(data.access_token)\n    return new Promise((resolve, reject) => {\n        axios({\n            url: REACT_APP_API_URL + '/book',\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            data\n        })\n        .then(res => resolve(res.data.user))\n        .catch(error => reject(error))\n    })\n}\n\nexport const unbookCourt = (access_token) => {\n    return new Promise((resolve, reject) => {\n        axios({\n            url: REACT_APP_API_URL + '/unbook',\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            data: { access_token }\n        })\n        .then(res => resolve(res.data.user))\n        .catch(error => reject(error))\n    })\n}","import React, { createContext, useContext, useState } from 'react'\nimport { useAuth } from './AuthContext'\nimport { getUserProfile } from '../helpers/userHelpers'\nconst UserContext = createContext()\n\nconst UserProvider = props => {\n    const { data } = useAuth()\n    const [userData, setUserData] = useState({user: data.user, loading: false, error: false})\n\n\n    const updateUser = user => {\n        if (user != null) {\n            setUserData({ ...userData, user})\n        }\n        else {\n            setUserData({ ...userData, loading: true })\n            getUserProfile()\n            .then(user => setUserData({ ...userData, user, loading: false }))\n            .catch(error => setUserData({ error: true, loading: false }))\n        }\n    }\n\n    return <UserContext.Provider value={{userData, updateUser}} {...props} />\n}\n\nconst useUser = () => useContext(UserContext)\nexport { UserProvider, useUser }","export const roundTime = date => {\n    const newDate = new Date()\n    if (date.getMinutes() <= 30 && date.getMinutes() > 0) {\n        newDate.setHours(date.getHours(), 30, 0, 0)\n    }\n    else if (date.getMinutes() > 30) {\n        newDate.setHours(date.getHours() + 1, 0, 0, 0)\n    }\n    else {\n        newDate.setTime(date.getTime())\n    }\n    return newDate\n}\n\nexport const dateToInterval = date => {\n    const roundedDate = roundTime(date)\n    const hours = roundedDate.getHours()\n    const minutes = roundedDate.getMinutes()\n    return (2 * hours) + (minutes / 30)\n\n}\n\nexport const intervalToDate = interval => {\n    const date = new Date()\n    date.setHours(Math.floor(interval/2), 0, 0, 0)\n    if(interval % 2) date.setMinutes(30)\n    return date\n}\n\nexport const intervalArray = (start, end) => {\n    if(start > end) {\n        throw Error('start must be <= end')\n    }\n    let intervals = new Array(end-start+1)\n    for(let i = 0; i < intervals.length; i++, start++) {\n        intervals[i] = start\n    }\n    return intervals\n}","import React from 'react'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './AddPlayer.css'\n\n// Form for booking or unbooking a court\nfunction AddPlayer(props) {\n    return (\n        <div>\n            {!props.booked ?  props.selected ? \n            <div>\n                <button onClick={props.book}>Book?</button>\n                <button onClick={props.cancel}>Cancel</button>\n            </div>: null :\n            <button onClick={() => props.unbook()}>Unbook court</button>}\n        </div>\n    )\n}\n\nfunction getEnd(start, hours) {\n    return new Date(start.getTime() + (hours*60*60000))\n}\n\nexport default AddPlayer","import React, {useEffect, useState} from 'react'\nimport FullCalendar, { CalendarDataManager } from '@fullcalendar/react'\nimport resourceTimeGridPlugin from '@fullcalendar/resource-timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport {dateToInterval, intervalArray} from '../helpers/timeHelper'\nimport AddPlayer from './AddPlayer'\nconst { REACT_APP_API_URL } = process.env\n\nconst AuthenticatedScheduler = (props) => {\n    const calendar = React.createRef()\n    const [selected, setSelected] = useState(false)\n    const [selection, setSelection] = useState({})\n    let resources = []\n    for(let i = 1; i <= 9; i++) {\n        resources.push({id: i, title: `Court ${i}`})\n    }\n\n    const handleSelect = async ({start, end, resource}) => {\n        const court = resource.id\n        const startInterval = dateToInterval(start)\n        const endInterval = dateToInterval(end)\n        const intervals = intervalArray(startInterval, endInterval)\n        const date = start.getDate()\n        setSelected(true)\n        setSelection({date, court, intervals})\n    }\n\n    const book = async () => {\n        console.log('hello')\n        await props.book(selection)\n        calendar.current.getApi().refetchEvents()\n    }\n\n    const unbook = async () => {\n        await props.unbook()\n        calendar.current.getApi().refetchEvents()\n    }\n\n    const cancel = async => {\n        calendar.current.getApi().unselect()\n        setSelected(false)\n    }\n\n\n    const eventMount = (info) => {\n          if(info.event.id != localStorage.getItem('id')) {\n              info.event.editable = false\n          }\n          else {\n              info.event.editable = true\n          }\n    }\n     return (\n        <div>\n        <AddPlayer\n            unbook={unbook}\n            book={book}\n            selected={selected}\n            selection={selection}\n            cancel={cancel}\n        />\n        <FullCalendar\n            ref={calendar}\n            plugins={[ resourceTimeGridPlugin, interactionPlugin ]}\n            initialView={'resourceTimeGridDay'}\n            resources={resources}\n            events={REACT_APP_API_URL + '/events'}\n            editable\n            eventOverlap={false}\n            selectable\n            select={handleSelect}\n            allDaySlot={false}\n            slotMinTime={\"06:00:00\"}\n            slotMaxTime={\"22:00:00\"}\n            eventDidMount={eventMount}\n            themeSystem={'bootstrap'}\n            timeZone={false}\n        />\n        </div>\n    )\n}\n\nexport default AuthenticatedScheduler","import React from 'react';\nimport Error from './Error'\nimport {Switch, Route} from 'react-router-dom'\nimport Navbar from './Navbar'\nimport { bookCourt, unbookCourt } from '../helpers/bookHelper'\nimport { useUser } from '../Context/UserContext'\nimport { useAuth } from '../Context/AuthContext'\nimport AuthenticatedScheduler from './AuthenticatedScheduler'\n\n// Root component that handles routing for all components\nconst AuthenticatedApp = () => {\n\n    const { userData, updateUser } = useUser()\n    const { signIn, signOut, data } = useAuth()\n\n    const book = async (info) => {\n      info.access_token = data.token\n      bookCourt(info)\n      .then(user => {\n          updateUser(user)\n      })\n      .catch(error => console.log('error booking', error))\n    }\n\n    const unbook = async () => {\n      unbookCourt(data.token)\n      .then(user => {\n          updateUser(user)\n      })\n      .catch(error => console.log('error unbooking', error))\n    }\n\n  return (\n    <main>\n      <Navbar signin={signIn} signout={signOut} auth={true} />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path='/' component={() => <AuthenticatedScheduler book={book} unbook={unbook} isAuthenticated={true}/>} />\n          <Route component={Error} />\n        </Switch>\n      </div>\n    </main>\n  )\n}\n\nexport default AuthenticatedApp","import React, {useEffect, useState} from 'react'\nimport FullCalendar, { CalendarDataManager } from '@fullcalendar/react'\nimport resourceTimeGridPlugin from '@fullcalendar/resource-timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport {dateToInterval, intervalArray} from '../helpers/timeHelper'\nimport AddPlayer from './AddPlayer'\nconst { REACT_APP_API_URL } = process.env\n\nconst UnauthenticatedScheduler = () => {\n    const calendar = React.createRef()\n    let resources = []\n    for(let i = 1; i <= 9; i++) {\n        resources.push({id: i, title: `Court ${i}`})\n    }\n\n    const eventMount = (info) => {\n          if(info.event.id != localStorage.getItem('id')) {\n              info.event.editable = false\n          }\n          else {\n              info.event.editable = true\n          }\n    }\n     return (\n        <div>\n        <FullCalendar\n            ref={calendar}\n            plugins={[ resourceTimeGridPlugin, interactionPlugin ]}\n            initialView={'resourceTimeGridDay'}\n            resources={resources}\n            events={REACT_APP_API_URL + '/events'}\n            eventOverlap={false}\n            allDaySlot={false}\n            slotMinTime={\"06:00:00\"}\n            slotMaxTime={\"22:00:00\"}\n            eventDidMount={eventMount}\n            themeSystem={'bootstrap'}\n            timeZone={false}\n        />\n        </div>\n    )\n}\n\nexport default UnauthenticatedScheduler","import React from 'react';\nimport Error from './Error'\nimport {Switch, Route} from 'react-router-dom'\nimport Navbar from './Navbar'\nimport { useAuth } from '../Context/AuthContext'\nimport UnauthenticatedScheduler from './UnauthenticatedScheduler'\n\nconst UnauthenticatedApp = () => {\n\n    const { signIn, signOut } = useAuth()\n\n    return (\n        <main>\n        <Navbar signin={signIn} signout={signOut} auth={false} />\n        <div className=\"container\">\n            <Switch>\n                <Route exact path='/' component={() => <UnauthenticatedScheduler isAuthenticated={false}/>} />\n                <Route component={Error} />\n            </Switch>\n        </div>\n        </main>\n    )\n}\n\nexport default UnauthenticatedApp","import React from 'react';\nimport { useAuth } from '../Context/AuthContext'\n// const AuthenticatedApp = React.lazy(() => import('./AuthenticatedApp'))\n// const UnauthenticatedApp = React.lazy(() => import('./UnauthenticatedApp'))\nimport AuthenticatedApp from './AuthenticatedApp'\nimport UnauthenticatedApp from './UnauthenticatedApp'\n\nconst App = props => {\n  const { data } = useAuth()\n  console.log(data.auth)\n  return data.auth ? <AuthenticatedApp /> : <UnauthenticatedApp />\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { AuthProvider } from './Context/AuthContext'\nimport { UserProvider } from './Context/UserContext'\nReactDOM.render(\n  <BrowserRouter>\n        <React.StrictMode>\n          <AuthProvider>\n            <UserProvider>\n              <App />\n            </UserProvider>\n          </AuthProvider>\n        </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}